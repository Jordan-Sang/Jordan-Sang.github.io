{"version":3,"sources":["components/Form/Form.js","components/App/App.js","index.js"],"names":["Form","props","state","hasAccount","isLoggedIn","users","currentUser","undefined","toggleForm","bind","signIn","register","signOut","getUsers","render","this","setState","emailInput","document","getElementById","value","passwordInput","logins","JSON","parse","localStorage","getItem","i","length","email","password","name","console","log","isLogginIn","clear","alert","nameInput","nameRegex","emailRegex","passwordRegex","test","accountExists","user","push","removeItem","setItem","stringify","timeOfDay","Date","getHours","className","style","marginBottom","onClick","type","placeholder","id","autoComplete","React","Component","App","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.fd84b4d2.chunk.js","sourcesContent":["import React from 'react';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasAccount: true,\n            isLoggedIn: false,\n            users: [],\n            currentUser: undefined\n        }\n\n        this.toggleForm = this.toggleForm.bind(this);\n        this.signIn = this.signIn.bind(this);\n        this.register = this.register.bind(this);\n        this.signOut = this.signOut.bind(this);\n        this.getUsers = this.getUsers.bind(this);\n        this.render = this.render.bind(this);\n    }\n\n    toggleForm() {\n        if (this.state.hasAccount) {\n            this.setState({\n                hasAccount: false\n            });\n        } else {\n            this.setState({\n                hasAccount: true\n            })\n        }\n    }\n\n    signIn() {\n        this.getUsers();\n\n        const emailInput = document.getElementById('email').value;\n        const passwordInput = document.getElementById('password').value;\n\n        const logins = JSON.parse(localStorage.getItem('users'));\n\n        for (let i = 0; i < logins.length; i++) {\n            if (logins[i].email === emailInput && logins[i].password === passwordInput) {\n                let currentUser = logins[i].name;\n                this.setState({\n                    currentUser: currentUser,\n                    isLoggedIn: true\n                });\n\n                console.log(this.state.currentUser);\n                console.log(this.state.isLogginIn);\n                console.clear();\n\n                return true;\n            } else {\n                alert('Your email or password is incorrect. Please try again.');\n                return false;\n            }\n        }\n\n        if (logins.length === 0 && emailInput.length > 10 && passwordInput.length > 8) {\n            alert('Your email or password is incorrect. Please try again.');\n        }\n    }\n\n    register() {\n        const nameInput = document.getElementById('name').value;\n        const emailInput = document.getElementById('email').value;\n        const passwordInput = document.getElementById('password').value;\n\n        const nameRegex = /[A-Za-z]{2,35}/;\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,16}$/;\n\n        const logins = JSON.parse(localStorage.getItem('users'));\n\n        if (nameRegex.test(nameInput) && emailRegex.test(emailInput) && passwordRegex.test(passwordInput)) {\n            let accountExists = false;\n\n            if (logins) {\n                for (let i = 0; i < logins.length; i++) {\n                    if (logins[i].email === emailInput) {\n                        accountExists = true;\n                    }\n                }\n            }\n\n            if (!accountExists) {\n                const user = {\n                    name: nameInput,\n                    email: emailInput,\n                    password: passwordInput\n                };\n\n                this.setState({\n                    currentUser: user.name\n                });\n\n                const users = this.state.users;\n                users.push(user);\n\n                this.setState({\n                    users: users\n                });\n                \n                localStorage.removeItem('users');\n                localStorage.setItem('users', JSON.stringify(this.state.users));\n\n                this.setState({\n                    isLoggedIn: true\n                });\n\n                return true;\n            } else {\n                alert('An account with that email already exists.')\n            }\n        } else {\n            if (!nameRegex.test(nameInput)) {\n                alert('Please enter a valid name.');\n            } else if (!emailRegex.test(emailInput)) {\n                alert('Please enter a valid email address.');\n            } else if (!passwordRegex.test(passwordInput)) {\n                alert('Please make sure that your password is between 8 and 16 characters and contains at least one number, one lowercase letter, and one capital letter.');\n            }\n            return false;\n        }\n    }\n\n    signOut() {\n        this.setState({\n            isLoggedIn: false,\n            hasAccount: true\n        });\n    }\n\n    getUsers() {\n        if (!localStorage.getItem('users')) {\n            localStorage.setItem('users', JSON.stringify(this.state.users));\n        }\n\n        let users = JSON.parse(localStorage.getItem('users'));\n\n        this.setState({\n            users: users\n        });\n    }\n\n    render() {\n        if (!this.state.isLoggedIn) {\n            return (\n                <main>\n                    <div className=\"login-container\">\n                        <form className=\"login\">\n                            <h1>{this.state.hasAccount ? 'Login' : 'Register'}</h1>\n                            {!this.state.hasAccount ? <input className=\"credentials\" type=\"text\" placeholder=\"Name\" id=\"name\" /> : ''}\n                            <input className=\"credentials\" type=\"email\" placeholder=\"Email\" id=\"email\" />\n                            <input className=\"credentials\" type=\"password\" placeholder=\"Password\" id=\"password\" autoComplete=\"password\" />\n                            {this.state.hasAccount ? <input className=\"button\" type=\"button\" onClick={this.signIn} value=\"Login\" /> : <input className=\"button\" type=\"button\" style={{marginBottom: 222 + 'px'}} onClick={this.register} value=\"Sign Up\" />}\n                            {this.state.hasAccount? <p className=\"toggle\">Not a member? <span onClick={this.toggleForm}>Sign up now</span></p> : <p className=\"toggle\">Already have an account? <span onClick={this.toggleForm}>Sign in here</span></p>}\n                        </form>\n                    </div>\n                </main>\n            );\n        } else {\n            let timeOfDay = new Date().getHours();\n\n            if (timeOfDay >= 3 && timeOfDay < 12) {\n                timeOfDay = 'morning';\n            } else if (timeOfDay >= 12 && timeOfDay < 18) {\n                timeOfDay = 'afternoon';\n            } else if (timeOfDay >= 18 || timeOfDay < 3) {\n                timeOfDay = 'evening';\n            }\n\n            let currentUser = this.state.currentUser;\n\n            return (\n                <main>\n                    <div className=\"login-container\">\n                        <form className=\"login\">\n                            <h1>Welcome</h1>\n                            <h2 style={{marginBottom: 483 + 'px'}}>Good {timeOfDay}, {currentUser}!</h2>\n                            <p className=\"toggle\"><span onClick={this.signOut}>Click here</span> to sign out</p>\n                        </form>\n                    </div>\n                </main>\n            )\n        }\n    }\n}\n\nexport default Form;","import React from 'react';\nimport './App.css';\nimport Form from '../Form/Form';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Form />\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('app')\n);"],"sourceRoot":""}